version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always #restarts if there is problen running containser
    ports:
     - "27017:27017"
    volumes:
     - mongo_data:/data/db   #check https://hub.docker.com/_/mongo>   docker run --name some-mongo -v /my/own/datadir:/data/db -d mongo    >for moving database records to filesystem directory

  basketdb:
    container_name: basketdb
    restart: always
    ports:
     - "6379:6379"
     #no volume, since not storing permanently

  discountdb:
    container_name: discountdb
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=admin1234
     - POSTGRES_DB=DiscountDb
    restart: always
    ports:
     - "5432:5432"
    volumes:
     - postgres_data:/var/lib/postgresql/data/ 

  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "SwN12345678"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
     - "1433:1433"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
     - "5672:5672"
     - "15672:15672"

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin #path to save pgadmin data in docker volume definition

  portainer:
    container_name: portainer
    restart: always
    ports:
     - "8080:8000" #port recommanded is "8000:8000", but since it is exposed by catalog api, use "8080:8000"
     - "9000:9000"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock # copy portainer user related information into docker volume definition
     - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017" #overide catalog.api appsettings.json config .Here localhost is replased by 'catalogdb' as docker network only knows containers_names
    depends_on:
      - catalogdb #this api depends on catalogdb mongo database. this makes sure catalogdb is working before running catalog.api
    ports:
      - "8000:80" #fowarding container port to 8000. when we expose this docker image we port forward to 8000 in local computer.so other microservice ports can use 8001,8002,....

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379" #replace localhost with basketdb redis database
      - "GrpcSettings:DiscountUrl=http://discount.grpc" #Basket.API consumes Discount.Grpc Microservice.change Url Config by env
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:80"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"


  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;" #postgres db
    depends_on:
      - discountdb
    ports:
      - "8003:80"


  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678;"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8004:80"


  ocelotapigw:
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        - catalog.api
        - basket.api
        - discount.api
        - ordering.api
    ports:
      - "8010:80"

  shopping.aggregator:
    container_name: shopping.aggregator
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ApiSettings:CatalogUrl=http://catalog.api"
        - "ApiSettings:BasketUrl=http://basket.api"
        - "ApiSettings:OrderingUrl=http://ordering.api"
    depends_on:
        - catalog.api
        - basket.api
        - ordering.api
    ports:
        - "8005:80"

